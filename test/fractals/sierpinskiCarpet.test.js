const { SierpinskiCarpet } = require('../../src/fractals/sierpinskiCarpet');
const { Utils } = require('../../src/utils');

describe('SierpinskiCarpet Tests', () => {
    test('generate n=0', () => {
        let expected = [
            '██',
        ];

        let result = new SierpinskiCarpet().create(0, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=1', () => {
        let expected = [
            '██████',
            '██  ██',
            '██████',
        ];

        let result = new SierpinskiCarpet().create(1, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=2', () => {
        let expected = [
            '██████████████████',
            '██  ████  ████  ██',
            '██████████████████',
            '██████      ██████',
            '██  ██      ██  ██',
            '██████      ██████',
            '██████████████████',
            '██  ████  ████  ██',
            '██████████████████',
        ];

        let result = new SierpinskiCarpet().create(2, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3', () => {
        let expected = [
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
            '██████      ████████████      ████████████      ██████',
            '██  ██      ██  ████  ██      ██  ████  ██      ██  ██',
            '██████      ████████████      ████████████      ██████',
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
            '██████████████████                  ██████████████████',
            '██  ████  ████  ██                  ██  ████  ████  ██',
            '██████████████████                  ██████████████████',
            '██████      ██████                  ██████      ██████',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '██████      ██████                  ██████      ██████',
            '██████████████████                  ██████████████████',
            '██  ████  ████  ██                  ██  ████  ████  ██',
            '██████████████████                  ██████████████████',
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
            '██████      ████████████      ████████████      ██████',
            '██  ██      ██  ████  ██      ██  ████  ██      ██  ██',
            '██████      ████████████      ████████████      ██████',
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
        ];

        let result = new SierpinskiCarpet().create(3, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=0', () => {
        let expected = [
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 0 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=1', () => {
        let expected = [
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 1 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=2', () => {
        let expected = [
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████      ████████████      ████████████      ██████',
            '██████      ████████████      ████████████      ██████',
            '██████      ████████████      ████████████      ██████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████      ████████████      ████████████      ██████',
            '██████      ████████████      ████████████      ██████',
            '██████      ████████████      ████████████      ██████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 2 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=3', () => {
        let expected = [
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
            '██████      ████████████      ████████████      ██████',
            '██  ██      ██  ████  ██      ██  ████  ██      ██  ██',
            '██████      ████████████      ████████████      ██████',
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
            '██████████████████                  ██████████████████',
            '██  ████  ████  ██                  ██  ████  ████  ██',
            '██████████████████                  ██████████████████',
            '██████      ██████                  ██████      ██████',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '██████      ██████                  ██████      ██████',
            '██████████████████                  ██████████████████',
            '██  ████  ████  ██                  ██  ████  ████  ██',
            '██████████████████                  ██████████████████',
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
            '██████      ████████████      ████████████      ██████',
            '██  ██      ██  ████  ██      ██  ████  ██      ██  ██',
            '██████      ████████████      ████████████      ██████',
            '██████████████████████████████████████████████████████',
            '██  ████  ████  ████  ████  ████  ████  ████  ████  ██',
            '██████████████████████████████████████████████████████',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 3 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=0 inverse=true', () => {
        let expected = [
            '  ',
        ];

        let result = new SierpinskiCarpet().create(0, { inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=1 inverse=true', () => {
        let expected = [
            '      ',
            '  ██  ',
            '      ',
        ];

        let result = new SierpinskiCarpet().create(1, { inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=2 inverse=true', () => {
        let expected = [
            '                  ',
            '  ██    ██    ██  ',
            '                  ',
            '      ██████      ',
            '  ██  ██████  ██  ',
            '      ██████      ',
            '                  ',
            '  ██    ██    ██  ',
            '                  ',
        ];

        let result = new SierpinskiCarpet().create(2, { inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 inverse=true', () => {
        let expected = [
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
            '      ██████            ██████            ██████      ',
            '  ██  ██████  ██    ██  ██████  ██    ██  ██████  ██  ',
            '      ██████            ██████            ██████      ',
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
            '                  ██████████████████                  ',
            '  ██    ██    ██  ██████████████████  ██    ██    ██  ',
            '                  ██████████████████                  ',
            '      ██████      ██████████████████      ██████      ',
            '  ██  ██████  ██  ██████████████████  ██  ██████  ██  ',
            '      ██████      ██████████████████      ██████      ',
            '                  ██████████████████                  ',
            '  ██    ██    ██  ██████████████████  ██    ██    ██  ',
            '                  ██████████████████                  ',
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
            '      ██████            ██████            ██████      ',
            '  ██  ██████  ██    ██  ██████  ██    ██  ██████  ██  ',
            '      ██████            ██████            ██████      ',
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
        ];

        let result = new SierpinskiCarpet().create(3, { inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=0 inverse=true', () => {
        let expected = [
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 0, inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=1 inverse=true', () => {
        let expected = [
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 1, inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=2 inverse=true', () => {
        let expected = [
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '      ██████      ██████████████████      ██████      ',
            '      ██████      ██████████████████      ██████      ',
            '      ██████      ██████████████████      ██████      ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '                                                      ',
            '                                                      ',
            '                                                      ',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 2, inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=3 inverse=true', () => {
        let expected = [
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
            '      ██████            ██████            ██████      ',
            '  ██  ██████  ██    ██  ██████  ██    ██  ██████  ██  ',
            '      ██████            ██████            ██████      ',
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
            '                  ██████████████████                  ',
            '  ██    ██    ██  ██████████████████  ██    ██    ██  ',
            '                  ██████████████████                  ',
            '      ██████      ██████████████████      ██████      ',
            '  ██  ██████  ██  ██████████████████  ██  ██████  ██  ',
            '      ██████      ██████████████████      ██████      ',
            '                  ██████████████████                  ',
            '  ██    ██    ██  ██████████████████  ██    ██    ██  ',
            '                  ██████████████████                  ',
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
            '      ██████            ██████            ██████      ',
            '  ██  ██████  ██    ██  ██████  ██    ██  ██████  ██  ',
            '      ██████            ██████            ██████      ',
            '                                                      ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '                                                      ',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 3, inverse: true });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=0 mode=lines', () => {
        let expected = [
            '┌─┐',
            '└─┘',
        ];

        let result = new SierpinskiCarpet().create(0, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=1 mode=lines', () => {
        let expected = [
            '┌─────┐',
            '│ ┌─┐ │',
            '│ └─┘ │',
            '└─────┘',
        ];

        let result = new SierpinskiCarpet().create(1, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=2 mode=lines', () => {
        let expected = [
            '┌─────────────────┐',
            '│ ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘ │',
            '│     ┌─────┐     │',
            '│ ┌─┐ │     │ ┌─┐ │',
            '│ └─┘ │     │ └─┘ │',
            '│     └─────┘     │',
            '│ ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘ │',
            '└─────────────────┘',
        ];

        let result = new SierpinskiCarpet().create(2, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 mode=lines', () => {
        let expected = [
            '┌─────────────────────────────────────────────────────┐',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '│     ┌─────┐           ┌─────┐           ┌─────┐     │',
            '│ ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐ │',
            '│ └─┘ │     │ └─┘   └─┘ │     │ └─┘   └─┘ │     │ └─┘ │',
            '│     └─────┘           └─────┘           └─────┘     │',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '│                 ┌─────────────────┐                 │',
            '│ ┌─┐   ┌─┐   ┌─┐ │                 │ ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘ │                 │ └─┘   └─┘   └─┘ │',
            '│     ┌─────┐     │                 │     ┌─────┐     │',
            '│ ┌─┐ │     │ ┌─┐ │                 │ ┌─┐ │     │ ┌─┐ │',
            '│ └─┘ │     │ └─┘ │                 │ └─┘ │     │ └─┘ │',
            '│     └─────┘     │                 │     └─────┘     │',
            '│ ┌─┐   ┌─┐   ┌─┐ │                 │ ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘ │                 │ └─┘   └─┘   └─┘ │',
            '│                 └─────────────────┘                 │',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '│     ┌─────┐           ┌─────┐           ┌─────┐     │',
            '│ ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐ │',
            '│ └─┘ │     │ └─┘   └─┘ │     │ └─┘   └─┘ │     │ └─┘ │',
            '│     └─────┘           └─────┘           └─────┘     │',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '└─────────────────────────────────────────────────────┘',
        ];

        let result = new SierpinskiCarpet().create(3, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=0 mode=lines', () => {
        let expected = [
            '┌─────────────────────────────────────────────────────┐',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '└─────────────────────────────────────────────────────┘',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 0, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=1 mode=lines', () => {
        let expected = [
            '┌─────────────────────────────────────────────────────┐',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                 ┌─────────────────┐                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 └─────────────────┘                 │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '└─────────────────────────────────────────────────────┘',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 1, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=2 mode=lines', () => {
        let expected = [
            '┌─────────────────────────────────────────────────────┐',
            '│                                                     │',
            '│                                                     │',
            '│     ┌─────┐           ┌─────┐           ┌─────┐     │',
            '│     │     │           │     │           │     │     │',
            '│     │     │           │     │           │     │     │',
            '│     └─────┘           └─────┘           └─────┘     │',
            '│                                                     │',
            '│                                                     │',
            '│                 ┌─────────────────┐                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│     ┌─────┐     │                 │     ┌─────┐     │',
            '│     │     │     │                 │     │     │     │',
            '│     │     │     │                 │     │     │     │',
            '│     └─────┘     │                 │     └─────┘     │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 └─────────────────┘                 │',
            '│                                                     │',
            '│                                                     │',
            '│     ┌─────┐           ┌─────┐           ┌─────┐     │',
            '│     │     │           │     │           │     │     │',
            '│     │     │           │     │           │     │     │',
            '│     └─────┘           └─────┘           └─────┘     │',
            '│                                                     │',
            '│                                                     │',
            '└─────────────────────────────────────────────────────┘',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 2, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=3 mode=lines', () => {
        let expected = [
            '┌─────────────────────────────────────────────────────┐',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '│     ┌─────┐           ┌─────┐           ┌─────┐     │',
            '│ ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐ │',
            '│ └─┘ │     │ └─┘   └─┘ │     │ └─┘   └─┘ │     │ └─┘ │',
            '│     └─────┘           └─────┘           └─────┘     │',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '│                 ┌─────────────────┐                 │',
            '│ ┌─┐   ┌─┐   ┌─┐ │                 │ ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘ │                 │ └─┘   └─┘   └─┘ │',
            '│     ┌─────┐     │                 │     ┌─────┐     │',
            '│ ┌─┐ │     │ ┌─┐ │                 │ ┌─┐ │     │ ┌─┐ │',
            '│ └─┘ │     │ └─┘ │                 │ └─┘ │     │ └─┘ │',
            '│     └─────┘     │                 │     └─────┘     │',
            '│ ┌─┐   ┌─┐   ┌─┐ │                 │ ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘ │                 │ └─┘   └─┘   └─┘ │',
            '│                 └─────────────────┘                 │',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '│     ┌─────┐           ┌─────┐           ┌─────┐     │',
            '│ ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐   ┌─┐ │     │ ┌─┐ │',
            '│ └─┘ │     │ └─┘   └─┘ │     │ └─┘   └─┘ │     │ └─┘ │',
            '│     └─────┘           └─────┘           └─────┘     │',
            '│ ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐   ┌─┐ │',
            '│ └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘   └─┘ │',
            '└─────────────────────────────────────────────────────┘',
        ];

        let result = new SierpinskiCarpet().create(3, { step: 3, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });
});