const { VicsekFractal } = require('../../src/fractals/vicsekFractal');
const { Utils } = require('../../src/utils');

describe('VicsekFractal Tests', () => {
    test('generate n=0', () => {
        let expected = [
            '██',
        ];

        let result = new VicsekFractal().create(0, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=1', () => {
        let expected = [
            '  ██  ',
            '██████',
            '  ██  ',
        ];

        let result = new VicsekFractal().create(1, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=2', () => {
        let expected = [
            '        ██        ',
            '      ██████      ',
            '        ██        ',
            '  ██    ██    ██  ',
            '██████████████████',
            '  ██    ██    ██  ',
            '        ██        ',
            '      ██████      ',
            '        ██        ',
        ];

        let result = new VicsekFractal().create(2, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3', () => {
        let expected = [
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
            '                    ██    ██    ██                    ',
            '                  ██████████████████                  ',
            '                    ██    ██    ██                    ',
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
            '        ██                ██                ██        ',
            '      ██████            ██████            ██████      ',
            '        ██                ██                ██        ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '██████████████████████████████████████████████████████',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '        ██                ██                ██        ',
            '      ██████            ██████            ██████      ',
            '        ██                ██                ██        ',
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
            '                    ██    ██    ██                    ',
            '                  ██████████████████                  ',
            '                    ██    ██    ██                    ',
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
        ];

        let result = new VicsekFractal().create(3, {});
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=0', () => {
        let expected = [
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
        ];

        let result = new VicsekFractal().create(3, { step: 0 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=1', () => {
        let expected = [
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
        ];

        let result = new VicsekFractal().create(3, { step: 1 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=2', () => {
        let expected = [
            '                        ██████                        ',
            '                        ██████                        ',
            '                        ██████                        ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                        ██████                        ',
            '                        ██████                        ',
            '                        ██████                        ',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '      ██████            ██████            ██████      ',
            '                        ██████                        ',
            '                        ██████                        ',
            '                        ██████                        ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                        ██████                        ',
            '                        ██████                        ',
            '                        ██████                        ',
        ];

        let result = new VicsekFractal().create(3, { step: 2 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=3', () => {
        let expected = [
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
            '                    ██    ██    ██                    ',
            '                  ██████████████████                  ',
            '                    ██    ██    ██                    ',
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
            '        ██                ██                ██        ',
            '      ██████            ██████            ██████      ',
            '        ██                ██                ██        ',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '██████████████████████████████████████████████████████',
            '  ██    ██    ██    ██    ██    ██    ██    ██    ██  ',
            '        ██                ██                ██        ',
            '      ██████            ██████            ██████      ',
            '        ██                ██                ██        ',
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
            '                    ██    ██    ██                    ',
            '                  ██████████████████                  ',
            '                    ██    ██    ██                    ',
            '                          ██                          ',
            '                        ██████                        ',
            '                          ██                          ',
        ];

        let result = new VicsekFractal().create(3, { step: 3 });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=0 rotation=diagonal', () => {
        let expected = [
            '██',
        ];

        let result = new VicsekFractal().create(0, { rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=1 rotation=diagonal', () => {
        let expected = [
            '██  ██',
            '  ██  ',
            '██  ██',
        ];

        let result = new VicsekFractal().create(1, { rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=2 rotation=diagonal', () => {
        let expected = [
            '██  ██      ██  ██',
            '  ██          ██  ',
            '██  ██      ██  ██',
            '      ██  ██      ',
            '        ██        ',
            '      ██  ██      ',
            '██  ██      ██  ██',
            '  ██          ██  ',
            '██  ██      ██  ██',
        ];

        let result = new VicsekFractal().create(2, { rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 rotation=diagonal', () => {
        let expected = [
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '      ██  ██                              ██  ██      ',
            '        ██                                  ██        ',
            '      ██  ██                              ██  ██      ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '                  ██  ██      ██  ██                  ',
            '                    ██          ██                    ',
            '                  ██  ██      ██  ██                  ',
            '                        ██  ██                        ',
            '                          ██                          ',
            '                        ██  ██                        ',
            '                  ██  ██      ██  ██                  ',
            '                    ██          ██                    ',
            '                  ██  ██      ██  ██                  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '      ██  ██                              ██  ██      ',
            '        ██                                  ██        ',
            '      ██  ██                              ██  ██      ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
        ];

        let result = new VicsekFractal().create(3, { rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=0 rotation=diagonal', () => {
        let expected = [
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
            '██████████████████████████████████████████████████████',
        ];

        let result = new VicsekFractal().create(3, { step: 0, rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=1 rotation=diagonal', () => {
        let expected = [
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '                  ██████████████████                  ',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
            '██████████████████                  ██████████████████',
        ];

        let result = new VicsekFractal().create(3, { step: 1, rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=2 rotation=diagonal', () => {
        let expected = [
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '      ██████                              ██████      ',
            '      ██████                              ██████      ',
            '      ██████                              ██████      ',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '                  ██████      ██████                  ',
            '                  ██████      ██████                  ',
            '                  ██████      ██████                  ',
            '                        ██████                        ',
            '                        ██████                        ',
            '                        ██████                        ',
            '                  ██████      ██████                  ',
            '                  ██████      ██████                  ',
            '                  ██████      ██████                  ',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '      ██████                              ██████      ',
            '      ██████                              ██████      ',
            '      ██████                              ██████      ',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
            '██████      ██████                  ██████      ██████',
        ];

        let result = new VicsekFractal().create(3, { step: 2, rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=3 rotation=diagonal', () => {
        let expected = [
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '      ██  ██                              ██  ██      ',
            '        ██                                  ██        ',
            '      ██  ██                              ██  ██      ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '                  ██  ██      ██  ██                  ',
            '                    ██          ██                    ',
            '                  ██  ██      ██  ██                  ',
            '                        ██  ██                        ',
            '                          ██                          ',
            '                        ██  ██                        ',
            '                  ██  ██      ██  ██                  ',
            '                    ██          ██                    ',
            '                  ██  ██      ██  ██                  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '      ██  ██                              ██  ██      ',
            '        ██                                  ██        ',
            '      ██  ██                              ██  ██      ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
            '  ██          ██                      ██          ██  ',
            '██  ██      ██  ██                  ██  ██      ██  ██',
        ];

        let result = new VicsekFractal().create(3, { step: 3, rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=0 mode=lines', () => {
        let expected = [
            '┌─┐',
            '└─┘',
        ];

        let result = new VicsekFractal().create(0, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=1 mode=lines', () => {
        let expected = [
            '  ┌─┐  ',
            '┌─┘ └─┐',
            '└─┐ ┌─┘',
            '  └─┘  ',
        ];

        let result = new VicsekFractal().create(1, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=2 mode=lines', () => {
        let expected = [
            '        ┌─┐        ',
            '      ┌─┘ └─┐      ',
            '      └─┐ ┌─┘      ',
            '  ┌─┐   │ │   ┌─┐  ',
            '┌─┘ └───┘ └───┘ └─┐',
            '└─┐ ┌───┐ ┌───┐ ┌─┘',
            '  └─┘   │ │   └─┘  ',
            '      ┌─┘ └─┐      ',
            '      └─┐ ┌─┘      ',
            '        └─┘        ',
        ];

        let result = new VicsekFractal().create(2, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 mode=lines', () => {
        let expected = [
            '                          ┌─┐                          ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '                    ┌─┐   │ │   ┌─┐                    ',
            '                  ┌─┘ └───┘ └───┘ └─┐                  ',
            '                  └─┐ ┌───┐ ┌───┐ ┌─┘                  ',
            '                    └─┘   │ │   └─┘                    ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '        ┌─┐               │ │               ┌─┐        ',
            '      ┌─┘ └─┐           ┌─┘ └─┐           ┌─┘ └─┐      ',
            '      └─┐ ┌─┘           └─┐ ┌─┘           └─┐ ┌─┘      ',
            '  ┌─┐   │ │   ┌─┐   ┌─┐   │ │   ┌─┐   ┌─┐   │ │   ┌─┐  ',
            '┌─┘ └───┘ └───┘ └───┘ └───┘ └───┘ └───┘ └───┘ └───┘ └─┐',
            '└─┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌─┘',
            '  └─┘   │ │   └─┘   └─┘   │ │   └─┘   └─┘   │ │   └─┘  ',
            '      ┌─┘ └─┐           ┌─┘ └─┐           ┌─┘ └─┐      ',
            '      └─┐ ┌─┘           └─┐ ┌─┘           └─┐ ┌─┘      ',
            '        └─┘               │ │               └─┘        ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '                    ┌─┐   │ │   ┌─┐                    ',
            '                  ┌─┘ └───┘ └───┘ └─┐                  ',
            '                  └─┐ ┌───┐ ┌───┐ ┌─┘                  ',
            '                    └─┘   │ │   └─┘                    ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '                          └─┘                          ',
        ];

        let result = new VicsekFractal().create(3, { mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=0 mode=lines', () => {
        let expected = [
            '┌─────────────────────────────────────────────────────┐',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '└─────────────────────────────────────────────────────┘',
        ];

        let result = new VicsekFractal().create(3, { step: 0, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=1 mode=lines', () => {
        let expected = [
            '                  ┌─────────────────┐                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '┌─────────────────┘                 └─────────────────┐',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '└─────────────────┐                 ┌─────────────────┘',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  └─────────────────┘                  ',
        ];

        let result = new VicsekFractal().create(3, { step: 1, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=2 mode=lines', () => {
        let expected = [
            '                        ┌─────┐                        ',
            '                        │     │                        ',
            '                        │     │                        ',
            '                  ┌─────┘     └─────┐                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  └─────┐     ┌─────┘                  ',
            '                        │     │                        ',
            '                        │     │                        ',
            '      ┌─────┐           │     │           ┌─────┐      ',
            '      │     │           │     │           │     │      ',
            '      │     │           │     │           │     │      ',
            '┌─────┘     └───────────┘     └───────────┘     └─────┐',
            '│                                                     │',
            '│                                                     │',
            '└─────┐     ┌───────────┐     ┌───────────┐     ┌─────┘',
            '      │     │           │     │           │     │      ',
            '      │     │           │     │           │     │      ',
            '      └─────┘           │     │           └─────┘      ',
            '                        │     │                        ',
            '                        │     │                        ',
            '                  ┌─────┘     └─────┐                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  └─────┐     ┌─────┘                  ',
            '                        │     │                        ',
            '                        │     │                        ',
            '                        └─────┘                        ',
        ];

        let result = new VicsekFractal().create(3, { step: 2, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=3 mode=lines', () => {
        let expected = [
            '                          ┌─┐                          ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '                    ┌─┐   │ │   ┌─┐                    ',
            '                  ┌─┘ └───┘ └───┘ └─┐                  ',
            '                  └─┐ ┌───┐ ┌───┐ ┌─┘                  ',
            '                    └─┘   │ │   └─┘                    ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '        ┌─┐               │ │               ┌─┐        ',
            '      ┌─┘ └─┐           ┌─┘ └─┐           ┌─┘ └─┐      ',
            '      └─┐ ┌─┘           └─┐ ┌─┘           └─┐ ┌─┘      ',
            '  ┌─┐   │ │   ┌─┐   ┌─┐   │ │   ┌─┐   ┌─┐   │ │   ┌─┐  ',
            '┌─┘ └───┘ └───┘ └───┘ └───┘ └───┘ └───┘ └───┘ └───┘ └─┐',
            '└─┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌───┐ ┌─┘',
            '  └─┘   │ │   └─┘   └─┘   │ │   └─┘   └─┘   │ │   └─┘  ',
            '      ┌─┘ └─┐           ┌─┘ └─┐           ┌─┘ └─┐      ',
            '      └─┐ ┌─┘           └─┐ ┌─┘           └─┐ ┌─┘      ',
            '        └─┘               │ │               └─┘        ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '                    ┌─┐   │ │   ┌─┐                    ',
            '                  ┌─┘ └───┘ └───┘ └─┐                  ',
            '                  └─┐ ┌───┐ ┌───┐ ┌─┘                  ',
            '                    └─┘   │ │   └─┘                    ',
            '                        ┌─┘ └─┐                        ',
            '                        └─┐ ┌─┘                        ',
            '                          └─┘                          ',
        ];

        let result = new VicsekFractal().create(3, { step: 3, mode: 'lines' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=0 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─┐',
            '└─┘',
        ];

        let result = new VicsekFractal().create(0, { mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=1 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─┐ ┌─┐',
            '└─┼─┼─┘',
            '┌─┼─┼─┐',
            '└─┘ └─┘',
        ];

        let result = new VicsekFractal().create(1, { mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=2 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─┐ ┌─┐     ┌─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┼─┐ ┌─┼─┘ └─┘',
            '      └─┼─┼─┘      ',
            '      ┌─┼─┼─┐      ',
            '┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┘     └─┘ └─┘',
        ];

        let result = new VicsekFractal().create(2, { mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─┐ ┌─┐     ┌─┐ ┌─┐                 ┌─┐ ┌─┐     ┌─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┼─┐ ┌─┼─┘ └─┘                 └─┘ └─┼─┐ ┌─┼─┘ └─┘',
            '      └─┼─┼─┘                             └─┼─┼─┘      ',
            '      ┌─┼─┼─┐                             ┌─┼─┼─┐      ',
            '┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐                 ┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┘     └─┘ └─┼─┐ ┌─┐     ┌─┐ ┌─┼─┘ └─┘     └─┘ └─┘',
            '                  └─┼─┼─┘     └─┼─┼─┘                  ',
            '                  ┌─┼─┼─┐     ┌─┼─┼─┐                  ',
            '                  └─┘ └─┼─┐ ┌─┼─┘ └─┘                  ',
            '                        └─┼─┼─┘                        ',
            '                        ┌─┼─┼─┐                        ',
            '                  ┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐                  ',
            '                  └─┼─┼─┘     └─┼─┼─┘                  ',
            '                  ┌─┼─┼─┐     ┌─┼─┼─┐                  ',
            '┌─┐ ┌─┐     ┌─┐ ┌─┼─┘ └─┘     └─┘ └─┼─┐ ┌─┐     ┌─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┼─┐ ┌─┼─┘ └─┘                 └─┘ └─┼─┐ ┌─┼─┘ └─┘',
            '      └─┼─┼─┘                             └─┼─┼─┘      ',
            '      ┌─┼─┼─┐                             ┌─┼─┼─┐      ',
            '┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐                 ┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┘     └─┘ └─┘                 └─┘ └─┘     └─┘ └─┘',
        ];

        let result = new VicsekFractal().create(3, { mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=0 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─────────────────────────────────────────────────────┐',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '│                                                     │',
            '└─────────────────────────────────────────────────────┘',
        ];

        let result = new VicsekFractal().create(3, { step: 0, mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=1 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─────────────────┐                 ┌─────────────────┐',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '└─────────────────┼─────────────────┼─────────────────┘',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '                  │                 │                  ',
            '┌─────────────────┼─────────────────┼─────────────────┐',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '│                 │                 │                 │',
            '└─────────────────┘                 └─────────────────┘',
        ];

        let result = new VicsekFractal().create(3, { step: 1, mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=2 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─────┐     ┌─────┐                 ┌─────┐     ┌─────┐',
            '│     │     │     │                 │     │     │     │',
            '│     │     │     │                 │     │     │     │',
            '└─────┼─────┼─────┘                 └─────┼─────┼─────┘',
            '      │     │                             │     │      ',
            '      │     │                             │     │      ',
            '┌─────┼─────┼─────┐                 ┌─────┼─────┼─────┐',
            '│     │     │     │                 │     │     │     │',
            '│     │     │     │                 │     │     │     │',
            '└─────┘     └─────┼─────┐     ┌─────┼─────┘     └─────┘',
            '                  │     │     │     │                  ',
            '                  │     │     │     │                  ',
            '                  └─────┼─────┼─────┘                  ',
            '                        │     │                        ',
            '                        │     │                        ',
            '                  ┌─────┼─────┼─────┐                  ',
            '                  │     │     │     │                  ',
            '                  │     │     │     │                  ',
            '┌─────┐     ┌─────┼─────┘     └─────┼─────┐     ┌─────┐',
            '│     │     │     │                 │     │     │     │',
            '│     │     │     │                 │     │     │     │',
            '└─────┼─────┼─────┘                 └─────┼─────┼─────┘',
            '      │     │                             │     │      ',
            '      │     │                             │     │      ',
            '┌─────┼─────┼─────┐                 ┌─────┼─────┼─────┐',
            '│     │     │     │                 │     │     │     │',
            '│     │     │     │                 │     │     │     │',
            '└─────┘     └─────┘                 └─────┘     └─────┘',
        ];

        let result = new VicsekFractal().create(3, { step: 2, mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });


    test('generate n=3 step=3 mode=lines rotation=diagonal', () => {
        let expected = [
            '┌─┐ ┌─┐     ┌─┐ ┌─┐                 ┌─┐ ┌─┐     ┌─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┼─┐ ┌─┼─┘ └─┘                 └─┘ └─┼─┐ ┌─┼─┘ └─┘',
            '      └─┼─┼─┘                             └─┼─┼─┘      ',
            '      ┌─┼─┼─┐                             ┌─┼─┼─┐      ',
            '┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐                 ┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┘     └─┘ └─┼─┐ ┌─┐     ┌─┐ ┌─┼─┘ └─┘     └─┘ └─┘',
            '                  └─┼─┼─┘     └─┼─┼─┘                  ',
            '                  ┌─┼─┼─┐     ┌─┼─┼─┐                  ',
            '                  └─┘ └─┼─┐ ┌─┼─┘ └─┘                  ',
            '                        └─┼─┼─┘                        ',
            '                        ┌─┼─┼─┐                        ',
            '                  ┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐                  ',
            '                  └─┼─┼─┘     └─┼─┼─┘                  ',
            '                  ┌─┼─┼─┐     ┌─┼─┼─┐                  ',
            '┌─┐ ┌─┐     ┌─┐ ┌─┼─┘ └─┘     └─┘ └─┼─┐ ┌─┐     ┌─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┼─┐ ┌─┼─┘ └─┘                 └─┘ └─┼─┐ ┌─┼─┘ └─┘',
            '      └─┼─┼─┘                             └─┼─┼─┘      ',
            '      ┌─┼─┼─┐                             ┌─┼─┼─┐      ',
            '┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐                 ┌─┐ ┌─┼─┘ └─┼─┐ ┌─┐',
            '└─┼─┼─┘     └─┼─┼─┘                 └─┼─┼─┘     └─┼─┼─┘',
            '┌─┼─┼─┐     ┌─┼─┼─┐                 ┌─┼─┼─┐     ┌─┼─┼─┐',
            '└─┘ └─┘     └─┘ └─┘                 └─┘ └─┘     └─┘ └─┘',
        ];

        let result = new VicsekFractal().create(3, { step: 3, mode: 'lines', rotation: 'diagonal' });
        expect(Utils.drawForTest(result)).toStrictEqual(expected);
    });
});